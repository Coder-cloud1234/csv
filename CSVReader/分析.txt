说明：因为需要读入两个csv文件，所以第一次执行该程序时会自动创建并写入两个csv文件（每个文件都有1000000行字符串，每行字符串包括两个整数值，它们之间用“,”分隔）
      ，第一次的运行时间会明显长于后面几次的运行时间；另外笔者感觉本题的侧重点应该是考察算法及操作系统相关知识点，而且编写sql脚本语言的解释器工作量太大，故没
      有编写针对解释sql语言的代码。


针对如下几个问题的解答：
1.该算法对机器资源的使用情况
答：算法中主要考虑两个map对象m1,m2占用内存的大小，大约等于（8+额外开销）* size*2

2.分析并测试各个表中 a 的 number of distinct values 对该算法性能的影响
答：一般两个表中的number的值越小，算法的性能越好，执行速度越快；算法的时间复杂度为O(mlogn)，其中m为行数，n为a中大于10的不同数值的个数

3. 思考并列举出所有能想到的做法，越多越好。描述他们的优劣点、适用的数据分布场景等，并描述什么场景下执行的快，什么场景下执行的慢，为什么
答：上述算法平均性能最高，适用于数据分布分散的场景，不适用于数据有序的场景，当数据有序时查找小路较低
    方法一：可以用两个数组代替上面的两个map对象，分别存储t1，t2中的a列元素的值，然后统计各个不同的值(>10)出现的次数，并且每次查找完之后将
    数组中等于该值的元素移除，然后计算t1表a列值等于t2表a列值的数量。该算法适用于数据基本正序的场景，当数据反序时该算法效率较低。
    方法二：每次从t1的a列读取一个数之后立即在t2中查找是否存在相同的值，有的话数量+1，直到结束。该算法适用于重复数据较少的场景，当重复数据
    较多时，效率低下。